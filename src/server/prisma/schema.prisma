// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Stage {
  PROSPECT
  CLIENT
  CUSTOM
}

enum Urgency {
  URGENT
  LOW
}

model User {
  id           Int           @id @default(autoincrement())
  name         String?       @db.VarChar(255)
  email        String        @unique @db.VarChar(255)
  password     String
  tasks        Task[]
  appointments Appointment[]
}

model Task {
  id          Int       @id @default(autoincrement())
  deadline    DateTime?
  urgency     Urgency
  completed   Boolean   @default(false)
  description String
  profile     Profile   @relation(fields: [profileId], references: [id])
  profileId   Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Profile {
  id            Int            @id @default(autoincrement())
  firstName     String
  lastName      String
  phoneNumber   String
  email         String         @unique
  industry      String
  notes         String?
  stage         Stage
  tasks         Task[]
  appointments  Appointment[]
  campaigns     Campaign[]
  transmissions Transmission[]
}

model Appointment {
  id        Int      @id @default(autoincrement())
  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId Int
  dateTime  DateTime
  notes     String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Package {
  id           Int     @id @default(autoincrement())
  title        String
  description  String
  location     String
  price        Int
  Genre        String
  allInclusive Boolean
  groups       Boolean
}

model Campaign {
  id                 Int            @id @default(autoincrement())
  subject            String
  body               String
  recurring          Boolean
  sendDateTime       DateTime
  active             Boolean
  emailList          String
  campaignRecipients Profile[]
  transmissions      Transmission[]
}

model Transmission {
  id               Int                @id @default(autoincrement())
  status           TransmissionStatus
  sentDateTime     DateTime
  transmissionType Stage              @default(CUSTOM)
  isAppointment    Boolean
  profile          Profile            @relation(fields: [profileId], references: [id])
  profileId        Int
  campaign         Campaign?          @relation(fields: [campaignId], references: [id])
  campaignId       Int?
}

enum TransmissionStatus {
  SUCCESS
  FAILED
}
